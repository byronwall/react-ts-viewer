// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`buildScopeTree - Simple Component > should build a scope tree for a simple React component and match snapshot > simpleComponent 1`] = `
{
  "category": "Program",
  "children": [
    {
      "category": "Variable",
      "children": [
        {
          "category": "ArrowFunction",
          "children": [
            {
              "category": "Variable",
              "children": [
                {
                  "category": "ReactHook",
                  "children": [],
                  "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:157-179",
                  "kind": 213,
                  "label": "useState [6]",
                  "loc": {
                    "end": {
                      "column": 50,
                      "line": 6,
                    },
                    "start": {
                      "column": 28,
                      "line": 6,
                    },
                  },
                  "meta": {
                    "hookName": "useState",
                  },
                  "source": "useState(initialCount)",
                  "value": 1,
                },
              ],
              "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:137-179",
              "kind": 260,
              "label": "[count, setCount] [6]",
              "loc": {
                "end": {
                  "column": 50,
                  "line": 6,
                },
                "start": {
                  "column": 8,
                  "line": 6,
                },
              },
              "meta": {
                "initializer": "useState(initialCount)",
              },
              "source": "[count, setCount] = useState(initialCount)",
              "value": 2,
            },
            {
              "category": "Variable",
              "children": [
                {
                  "category": "ArrowFunction",
                  "children": [
                    {
                      "category": "Call",
                      "children": [],
                      "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:214-233",
                      "kind": 213,
                      "label": "setCount [9]",
                      "loc": {
                        "end": {
                          "column": 23,
                          "line": 9,
                        },
                        "start": {
                          "column": 4,
                          "line": 9,
                        },
                      },
                      "source": "setCount(count + 1)",
                      "value": 1,
                    },
                  ],
                  "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:202-238",
                  "kind": 219,
                  "label": "() => {} [8-10]",
                  "loc": {
                    "end": {
                      "column": 3,
                      "line": 10,
                    },
                    "start": {
                      "column": 20,
                      "line": 8,
                    },
                  },
                  "meta": {
                    "call": "setCount [9]",
                    "collapsed": "arrowFunction",
                    "originalCategory": "ArrowFunction",
                  },
                  "source": "() => {
    setCount(count + 1);
  }",
                  "value": 2,
                },
              ],
              "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:190-238",
              "kind": 260,
              "label": "increment [8-10]",
              "loc": {
                "end": {
                  "column": 3,
                  "line": 10,
                },
                "start": {
                  "column": 8,
                  "line": 8,
                },
              },
              "meta": {
                "initializer": "() => {
    setCount(count + 1);
  }",
              },
              "source": "increment = () => {
    setCount(count + 1);
  }",
              "value": 3,
            },
            {
              "category": "ReturnStatement",
              "children": [
                {
                  "category": "JSXElementDOM",
                  "children": [
                    {
                      "category": "JSXElementDOM",
                      "children": [],
                      "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:268-289",
                      "kind": 284,
                      "label": "<p> [14]",
                      "loc": {
                        "end": {
                          "column": 27,
                          "line": 14,
                        },
                        "start": {
                          "column": 6,
                          "line": 14,
                        },
                      },
                      "source": "<p>Count: {count}</p>",
                      "value": 1,
                    },
                    {
                      "category": "JSXElementDOM",
                      "children": [],
                      "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:296-342",
                      "kind": 284,
                      "label": "<button> [15]",
                      "loc": {
                        "end": {
                          "column": 52,
                          "line": 15,
                        },
                        "start": {
                          "column": 6,
                          "line": 15,
                        },
                      },
                      "source": "<button onClick={increment}>Increment</button>",
                      "value": 1,
                    },
                  ],
                  "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:256-353",
                  "kind": 284,
                  "label": "<div> [13-16]",
                  "loc": {
                    "end": {
                      "column": 10,
                      "line": 16,
                    },
                    "start": {
                      "column": 4,
                      "line": 13,
                    },
                  },
                  "source": "<div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>",
                  "value": 3,
                },
              ],
              "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:243-358",
              "kind": 253,
              "label": "return (
    <div>
      <p>Count: {c... [12-17]",
              "loc": {
                "end": {
                  "column": 4,
                  "line": 17,
                },
                "start": {
                  "column": 2,
                  "line": 12,
                },
              },
              "source": "return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );",
              "value": 4,
            },
          ],
          "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:102-360",
          "kind": 219,
          "label": "() => {} [3-18]",
          "loc": {
            "end": {
              "column": 1,
              "line": 18,
            },
            "start": {
              "column": 60,
              "line": 3,
            },
          },
          "source": "({
  initialCount,
}) => {
  const [count, setCount] = useState(initialCount);

  const increment = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );
}",
          "value": 10,
        },
      ],
      "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:48-360",
      "kind": 260,
      "label": "SimpleComponent [3-18]",
      "loc": {
        "end": {
          "column": 1,
          "line": 18,
        },
        "start": {
          "column": 6,
          "line": 3,
        },
      },
      "meta": {
        "initializer": "({
  initialCount,
}) => {
  const [count, setCount] = useState(initialCount);

  const increment = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );
}",
      },
      "source": "SimpleComponent: React.FC<{ initialCount: number }> = ({
  initialCount,
}) => {
  const [count, setCount] = useState(initialCount);

  const increment = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );
}",
      "value": 11,
    },
    {
      "category": "Import",
      "children": [],
      "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx:0-40",
      "kind": 272,
      "label": "react [1]",
      "loc": {
        "end": {
          "column": 40,
          "line": 1,
        },
        "start": {
          "column": 0,
          "line": 1,
        },
      },
      "source": "import React, { useState } from "react";",
      "value": 1,
    },
  ],
  "id": "/Users/byronwall/Projects/react-ts-viewer/src/__tests__/__fixtures__/SimpleComponent.tsx",
  "kind": 307,
  "label": "SimpleComponent.tsx",
  "loc": {
    "end": {
      "column": 0,
      "line": 21,
    },
    "start": {
      "column": 0,
      "line": 1,
    },
  },
  "source": "import React, { useState } from "react";

const SimpleComponent: React.FC<{ initialCount: number }> = ({
  initialCount,
}) => {
  const [count, setCount] = useState(initialCount);

  const increment = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );
};

export default SimpleComponent;
",
  "value": 13,
}
`;
